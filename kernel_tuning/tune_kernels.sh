#!/bin/bash

# If no GPUs are specified, throw an error
if [ $# -eq 0 ]; then
    echo "No GPUs specified. Please provide the indices of the GPUs to tune the kernels for."
    exit 1
fi

available_gpus=$(nvidia-smi --query-gpu=index --format=csv,noheader | tr '\n' ' ')
for i in $@; do
    if [[ ! $available_gpus =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then
        echo "GPU $i is not available. Please provide the indices of the GPUs to tune the kernels for."
        exit 1
    fi
done

# Check if Python is installed
if ! command -v python3 &> /dev/null; then
    echo "Python3 is not installed. Please install it to continue."
    exit 1
fi

# Check if Pandas is installed
if ! python3 -c "import pandas" &> /dev/null; then
    echo "Pandas is not installed. Please install it to continue."
    exit 1
fi

# Set path of directory containing this script
DIR=$(dirname $0)

SOURCE_DIR=$DIR/..

BUILD_DIR=$SOURCE_DIR/build

TUNE_FILE=$SOURCE_DIR/src/utils/GPU_tunes.hpp

cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_KERNEL_TUNER=ON -S $SOURCE_DIR -B $BUILD_DIR
cmake --build $BUILD_DIR --target ecl_tune_kernels

# Command line args are the indices of the GPUs to tune the kernels for
for i in $@; do
    GPU_NAME=$(nvidia-smi --query-gpu=name --format=csv,noheader,nounits -i $i)
    python3 $DIR/check_tuned_GPUs.py $TUNE_FILE "$GPU_NAME"
    if [ $? -eq 1 ]; then
        echo "Kernels for GPU $i ($GPU_NAME) are already tuned. Skipping..."
        continue
    fi
    echo "Tuning kernels for GPU $i"
    # Tune the kernels for the specified GPU
    $BUILD_DIR/kernel_tuning/ecl_tune_kernels $DIR $i
    python3 $DIR/apply_tunes.py $TUNE_FILE
done

# Remove CSV files generated by the tuner
rm $DIR/*.csv